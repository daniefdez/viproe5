version: '3.8'

services:
  # üóÑÔ∏è BASE DE DATOS POSTGRESQL
  postgres:
    image: postgres:15-alpine
    container_name: visionai_postgres
    environment:
      POSTGRES_DB: visionai_pro
      POSTGRES_USER: visionai_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password_change_me}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - visionai_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U visionai_user -d visionai_pro"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üìä REDIS PARA CACHE Y RATE LIMITING
  redis:
    image: redis:7-alpine
    container_name: visionai_redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password_change_me}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - visionai_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üöÄ BACKEND API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: visionai_backend
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://visionai_user:${DB_PASSWORD:-secure_password_change_me}@postgres:5432/visionai_pro
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis_password_change_me}@redis:6379
      JWT_SECRET: ${JWT_SECRET}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      CORS_ORIGINS: ${CORS_ORIGINS:-http://localhost:3000}
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - visionai_network
    restart: unless-stopped
    volumes:
      - ./backend/logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üåê FRONTEND (NGINX + REACT BUILD)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: visionai_frontend
    environment:
      VITE_API_URL: ${API_URL:-http://localhost:3001}
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - visionai_network
    restart: unless-stopped

  # üìä NGINX REVERSE PROXY (OPCIONAL)
  nginx:
    image: nginx:alpine
    container_name: visionai_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - visionai_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  visionai_network:
    driver: bridge